name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_streaming_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug
          extensions: pdo, pdo_mysql, redis

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Install Node Dependencies
        run: npm ci

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Configure Environment for Testing
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laravel_streaming_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "CACHE_DRIVER=redis" >> .env
          echo "SESSION_DRIVER=redis" >> .env
          echo "QUEUE_CONNECTION=redis" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Directory Permissions
        run: |
          chmod -R 755 storage bootstrap/cache
          chmod -R 777 storage

      - name: Run Database Migrations
        run: php artisan migrate --force

      - name: Clear Laravel Caches
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: ./vendor/bin/phpunit --coverage-text
