services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - UID=${UID}
        - GID=${GID}
    container_name: app
    volumes:
      - ./:/var/www
    networks:
      - lifeandmessage  
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - lifeandmessage
    depends_on:
      - app    
    
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - lifeandmessage  

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"    
    networks:
      - lifeandmessage  

  node:
    image: node:current-alpine
    container_name: node
    environment:
      - NODE_ENV=development
    volumes:
      - .:/var/www
      - /var/www/node_modules
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www
    command: sh -c "npm install && npm run dev -- --host"    
    tty: true
    networks:
      - lifeandmessage

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"  
    networks:
      - lifeandmessage

networks:
  lifeandmessage:
    driver: bridge

volumes:
  mysql_data: